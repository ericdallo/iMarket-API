apply plugin: 'eclipse'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot/" }
}

eclipse {
    classpath {
        downloadJavadoc = false
        downloadSources = true
    }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    ext {
        SPRING_BOOT_VERSION = "1.3.5.RELEASE"
        SPRING_WEB_MVC_VERSION = "4.2.3.RELEASE"
    }

    compile "org.springframework.boot:spring-boot-starter-web:$SPRING_BOOT_VERSION"
    compile "org.springframework.boot:spring-boot-starter-jetty:$SPRING_BOOT_VERSION"
    compile "org.springframework:spring-webmvc:$SPRING_WEB_MVC_VERSION"
    compile "org.springframework.boot:spring-boot-devtools"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile 'mysql:mysql-connector-java'
    compile "org.springframework.composed:spring-composed:1.0.0.BUILD-SNAPSHOT"
    compile 'org.springframework.security:spring-security-web'
    compile 'org.springframework.security:spring-security-config'
    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.11.RELEASE'
    
    compile 'com.google.cloud:google-cloud:0.5.1'
}

bootRun {
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9999"]
}
